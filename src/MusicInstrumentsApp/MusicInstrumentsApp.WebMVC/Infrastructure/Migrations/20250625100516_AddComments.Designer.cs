// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicInstrumentsApp.Infrastructure.Data;

#nullable disable

namespace MusicInstrumentsApp.WebMVC.Infrastructure.Migrations
{
    [DbContext(typeof(MusicInstrumentsContext))]
    [Migration("20250625100516_AddComments")]
    partial class AddComments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MusicInstrumentsApp.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "String"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Keyboard"
                        });
                });

            modelBuilder.Entity("MusicInstrumentsApp.Domain.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("MusicInstrumentsApp.Domain.Entities.Instrument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Instruments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ManufacturerId = 1,
                            Name = "Yamaha Acoustic Guitar",
                            Price = 299.99m,
                            ReleaseYear = 2020
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            ManufacturerId = 2,
                            Name = "Fender Stratocaster",
                            Price = 699.99m,
                            ReleaseYear = 2019
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            ManufacturerId = 1,
                            Name = "Yamaha Digital Piano",
                            Price = 499.99m,
                            ReleaseYear = 2021
                        });
                });

            modelBuilder.Entity("MusicInstrumentsApp.Domain.Entities.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Japan",
                            Name = "Yamaha"
                        },
                        new
                        {
                            Id = 2,
                            Country = "USA",
                            Name = "Fender"
                        });
                });

            modelBuilder.Entity("MusicInstrumentsApp.Domain.Entities.Comment", b =>
                {
                    b.HasOne("MusicInstrumentsApp.Domain.Entities.Instrument", "Instrument")
                        .WithMany("Comments")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instrument");
                });

            modelBuilder.Entity("MusicInstrumentsApp.Domain.Entities.Instrument", b =>
                {
                    b.HasOne("MusicInstrumentsApp.Domain.Entities.Category", "Category")
                        .WithMany("Instruments")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicInstrumentsApp.Domain.Entities.Manufacturer", "Manufacturer")
                        .WithMany("Instruments")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("MusicInstrumentsApp.Domain.Entities.Category", b =>
                {
                    b.Navigation("Instruments");
                });

            modelBuilder.Entity("MusicInstrumentsApp.Domain.Entities.Instrument", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("MusicInstrumentsApp.Domain.Entities.Manufacturer", b =>
                {
                    b.Navigation("Instruments");
                });
#pragma warning restore 612, 618
        }
    }
}
